@{
     Layout = "~/Shared/_SiteLayout.cshtml";
    Page.Title = "Update a Ticket";
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1" />

    <title>Update Incident</title>
    <script type="text/javascript">
            var server = "http://skrisred.redmond.corp.microsoft.com/";
			
            
function gup( name, url ) {
  if (!url) url = location.href
  name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
  var regexS = "[\\?&]"+name+"=([^&#]*)";
  var regex = new RegExp( regexS );
  var results = regex.exec( url );
  return results == null ? null : results[1];
}
	function getIncident() {
		var path = "servicemodelsamples/RestService.svc/incident";
	   var id = gup("id",window.location);
	var url = server + path + "/" + id;
	   var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState == 4) {
		    if(xmlhttp.status == 200) {
				var respObj = JSON.parse(xmlhttp.responseText);
				if(respObj instanceof Array) {
					respObj = respObj [0];
				}
			
			populateIncident(respObj);
		    }else {
			alert("Failed while updating incident " + " Response Code:"  + xmlhttp.status + " Response:" + xmlhttp.responseText);
		    }
                }
            }
            xmlhttp.open("GET", url, true);
            xmlhttp.send();
	}

	function populateIncident(incidentData) {
	    var incidentForm = document.updateIncident;
		if(incidentData.Id) incidentForm.Id.value = incidentData.Id;
		
        if(incidentData.Title)     incidentForm.Title.value = incidentData.Title;
        if(incidentData.Description)    incidentForm.Description.value = incidentData.Description;
        if(incidentData.Category)    incidentForm.Category.value = getLastToken(incidentData.Category,".");
		if(incidentData.Status)    incidentForm.Status.value = getLastToken(incidentData.Status,".");
        if(incidentData.Impact) incidentForm.Impact.value = getLastToken(incidentData.Impact,".");
        if(incidentData.Urgency)    incidentForm.Urgency.value = getLastToken(incidentData.Urgency,".");
        if(incidentData.Priority)    incidentForm.Priority.value = incidentData.Priority;
	}

	function getLastToken(str, delim) {
		return str.substring(str.lastIndexOf(delim)+1);
	}
	
        function postIncident() {
		var path = "servicemodelsamples/RestService.svc/incident";
		var id = gup("id",window.location);
	var url = server + path + "/" + id;
            //("create , post data, receive result, show result");

            var data = new IncidentData(document.updateIncident);

            postAjaxReq(url, JSON.stringify(data));

        }

		function uploadFile() {
			var path = "servicemodelsamples/RestService.svc/incidentFile";//todo change it for file upload.
			var id = gup("id",window.location);
			var url = server + path + "/" + id;

			var file = document.getElementById("supporting");
			var formData = new FormData();
			formData.append("upload", file.files[0]);

			var client = new XMLHttpRequest();
            client.onreadystatechange = function () {
            if (client.readyState == 4) {
				if(client.status == 200) {
					var respObj = JSON.parse(client.responseText);
					alert("Supporting file is successfully uploaded to incident. " + client.responseText);
				} 
				else {
					alert("Failed while updating file " + " Response Code:"  + client.status + " Response:" + client.responseText);
				}
            }
            }
			client.open("post", url, true);
			client.setRequestHeader("Content-Type", "multipart/form-data");
			client.send(formData);
	   }
     
  
        function postAjaxReq(url, data) {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4) {
				if(xmlhttp.status == 200) {
					var respObj = JSON.parse(xmlhttp.responseText);
					if(respObj instanceof Array) {
						respObj = respObj [0];
					}
					alert("Incident is updated"+respObj.Id);
					//go to All incidents
					window.location.href = "MyRequests";
				} else {
					alert("Failed while updating incident " + " Response Code:"  + xmlhttp.status + " Response:" + xmlhttp.responseText);
				}
            }
            }
            xmlhttp.open("PUT", url, true);
            xmlhttp.setRequestHeader("Content-type","application/json");
            xmlhttp.send(data);
        }

        function IncidentData(incidentForm) {
	    this.Id = incidentForm.Id.value;
            this.Title = incidentForm.Title.value;
            this.Description = incidentForm.Description.value;
            this.Category = incidentForm.Category.value;
            this.Status = incidentForm.Status.value;
            this.Impact = incidentForm.Impact.value;
            this.Urgency = incidentForm.Urgency.value;
            this.Priority = incidentForm.Priority.value;
        }
	
	function setPriority(){
		//determine and set prio
		var e = document.getElementById("Impact");
		var iVal = e.options[e.selectedIndex].value;

		e = document.getElementById("Urgency");
		var uVal = e.options[e.selectedIndex].value;

		e = document.getElementById("Priority");
		e.value = 9;//set based on what?
	}
    </script>
</head>
<body onLoad="getIncident()">
    <form name="updateIncident" method="post">
        <fieldset>
            <legend>Incident Details</legend>
	    
            <div>
                <label for="Id">Id:</label>
                <input type="text" id="Id" value="" disabled="true"/>
            </div>

		<div>
                <label for="Title">Title:</label>
                <input type="text" id="Title" value="" disabled="true"/>
            </div>
            <div>
                <label for="Description">Description:</label>
                <input type="text" id="Description" value="" multiple="true"/>
            </div>
            <div>
                <label for="Category">Classification Category:</label>
				<select id="Category" >
				  <option disabled selected> </option>
                  <option value="Email" >Email</option>
                  <option value="Printing" >Printing</option>
				  <option value="Other" >Other</option>
				  <option value="Networking" >Networking</option>
				  <option value="Software" >Software</option>
				  <option value="Enterprise Applications" >Enterprise Applications</option>
				  <option value="CI Overide" >CI Overide</option>
				  <option value="Hardware" >Hardware</option>
                </select>

                <label for="Status">Status:</label>
                <select id="Status" >
					<option disabled selected> </option>
                  <option value="Active" disabled>Active</option>
				  <option value="Resolved">Resolved</option>
				  <option value="Closed">Closed</option>
                </select>
            </div>
            <div>
                <label for="Impact">Impact:</label>
                <select id="Impact" onChange="setPriority()">
			<option disabled selected> </option>
                  <option value="Low" >Low</option>
                  <option value="Medium">Medium</option>
                  <option value="High">High</option>
                </select>

                <label for="Urgency">Urgency:</label>
                <select id="Urgency"  onChange="setPriority()">
			<option disabled selected> </option>
                  <option value="Low" >Low</option>
                  <option value="Medium">Medium</option>
                  <option value="High">High</option>
                </select>


                <label for="Priority">Priority:</label>
                <input type="text" id="Priority" value="" disabled="true"/>
            </div>
			
			<div>
                <label for="Attachment">Attachment:</label>
                <input type="file"  id="supporting"/>
				<input type="button"  value="Upload Supporting" onclick="uploadFile()"/>
            </div>

			
            <div>
                <label>&nbsp;</label>
                <input type="button" value="Update Ticket" class="submit" onclick="postIncident(); return false;"/>
            </div>
        </fieldset>
    </form>
</body>
</html>